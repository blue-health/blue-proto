// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: order/order_placed.proto

package order

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderPlaced struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IdentityId    string                     `protobuf:"bytes,2,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
	Tags          []string                   `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	Note          string                     `protobuf:"bytes,4,opt,name=note,proto3" json:"note,omitempty"`
	State         string                     `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	Number        int64                      `protobuf:"varint,6,opt,name=number,proto3" json:"number,omitempty"`
	SubtotalPrice *OrderPlaced_Amount        `protobuf:"bytes,7,opt,name=subtotal_price,json=subtotalPrice,proto3" json:"subtotal_price,omitempty"`
	ShippingPrice *OrderPlaced_Amount        `protobuf:"bytes,8,opt,name=shipping_price,json=shippingPrice,proto3" json:"shipping_price,omitempty"`
	TotalPrice    *OrderPlaced_Amount        `protobuf:"bytes,9,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`
	TaxPrice      *OrderPlaced_Amount        `protobuf:"bytes,10,opt,name=tax_price,json=taxPrice,proto3" json:"tax_price,omitempty"`
	LineItems     []*OrderPlaced_LineItem    `protobuf:"bytes,11,rep,name=line_items,json=lineItems,proto3" json:"line_items,omitempty"`
	Fulfillments  []*OrderPlaced_Fulfillment `protobuf:"bytes,12,rep,name=fulfillments,proto3" json:"fulfillments,omitempty"`
}

func (x *OrderPlaced) Reset() {
	*x = OrderPlaced{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_placed_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPlaced) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPlaced) ProtoMessage() {}

func (x *OrderPlaced) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_placed_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPlaced.ProtoReflect.Descriptor instead.
func (*OrderPlaced) Descriptor() ([]byte, []int) {
	return file_order_order_placed_proto_rawDescGZIP(), []int{0}
}

func (x *OrderPlaced) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderPlaced) GetIdentityId() string {
	if x != nil {
		return x.IdentityId
	}
	return ""
}

func (x *OrderPlaced) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *OrderPlaced) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *OrderPlaced) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *OrderPlaced) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *OrderPlaced) GetSubtotalPrice() *OrderPlaced_Amount {
	if x != nil {
		return x.SubtotalPrice
	}
	return nil
}

func (x *OrderPlaced) GetShippingPrice() *OrderPlaced_Amount {
	if x != nil {
		return x.ShippingPrice
	}
	return nil
}

func (x *OrderPlaced) GetTotalPrice() *OrderPlaced_Amount {
	if x != nil {
		return x.TotalPrice
	}
	return nil
}

func (x *OrderPlaced) GetTaxPrice() *OrderPlaced_Amount {
	if x != nil {
		return x.TaxPrice
	}
	return nil
}

func (x *OrderPlaced) GetLineItems() []*OrderPlaced_LineItem {
	if x != nil {
		return x.LineItems
	}
	return nil
}

func (x *OrderPlaced) GetFulfillments() []*OrderPlaced_Fulfillment {
	if x != nil {
		return x.Fulfillments
	}
	return nil
}

type OrderPlaced_Amount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value    int64  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Currency string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *OrderPlaced_Amount) Reset() {
	*x = OrderPlaced_Amount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_placed_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPlaced_Amount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPlaced_Amount) ProtoMessage() {}

func (x *OrderPlaced_Amount) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_placed_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPlaced_Amount.ProtoReflect.Descriptor instead.
func (*OrderPlaced_Amount) Descriptor() ([]byte, []int) {
	return file_order_order_placed_proto_rawDescGZIP(), []int{0, 0}
}

func (x *OrderPlaced_Amount) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *OrderPlaced_Amount) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type OrderPlaced_TaxRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rate int32  `protobuf:"varint,1,opt,name=rate,proto3" json:"rate,omitempty"`
	Kind string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
}

func (x *OrderPlaced_TaxRate) Reset() {
	*x = OrderPlaced_TaxRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_placed_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPlaced_TaxRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPlaced_TaxRate) ProtoMessage() {}

func (x *OrderPlaced_TaxRate) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_placed_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPlaced_TaxRate.ProtoReflect.Descriptor instead.
func (*OrderPlaced_TaxRate) Descriptor() ([]byte, []int) {
	return file_order_order_placed_proto_rawDescGZIP(), []int{0, 1}
}

func (x *OrderPlaced_TaxRate) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *OrderPlaced_TaxRate) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

type OrderPlaced_ProductInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Sku         string   `protobuf:"bytes,2,opt,name=sku,proto3" json:"sku,omitempty"`
	Name        string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Category    string   `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	Description string   `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Tags        []string `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *OrderPlaced_ProductInfo) Reset() {
	*x = OrderPlaced_ProductInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_placed_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPlaced_ProductInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPlaced_ProductInfo) ProtoMessage() {}

func (x *OrderPlaced_ProductInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_placed_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPlaced_ProductInfo.ProtoReflect.Descriptor instead.
func (*OrderPlaced_ProductInfo) Descriptor() ([]byte, []int) {
	return file_order_order_placed_proto_rawDescGZIP(), []int{0, 2}
}

func (x *OrderPlaced_ProductInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderPlaced_ProductInfo) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *OrderPlaced_ProductInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderPlaced_ProductInfo) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *OrderPlaced_ProductInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OrderPlaced_ProductInfo) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type OrderPlaced_LineItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductId         string                   `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	FulfillmentId     string                   `protobuf:"bytes,3,opt,name=fulfillment_id,json=fulfillmentId,proto3" json:"fulfillment_id,omitempty"`
	Number            int64                    `protobuf:"varint,4,opt,name=number,proto3" json:"number,omitempty"`
	TaxRate           *OrderPlaced_TaxRate     `protobuf:"bytes,5,opt,name=tax_rate,json=taxRate,proto3" json:"tax_rate,omitempty"`
	Quantity          int64                    `protobuf:"varint,6,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Multiplicity      int64                    `protobuf:"varint,7,opt,name=multiplicity,proto3" json:"multiplicity,omitempty"`
	OriginalPrice     *OrderPlaced_Amount      `protobuf:"bytes,8,opt,name=original_price,json=originalPrice,proto3" json:"original_price,omitempty"`
	OriginalLinePrice *OrderPlaced_Amount      `protobuf:"bytes,9,opt,name=original_line_price,json=originalLinePrice,proto3" json:"original_line_price,omitempty"`
	FinalPrice        *OrderPlaced_Amount      `protobuf:"bytes,10,opt,name=final_price,json=finalPrice,proto3" json:"final_price,omitempty"`
	FinalLinePrice    *OrderPlaced_Amount      `protobuf:"bytes,11,opt,name=final_line_price,json=finalLinePrice,proto3" json:"final_line_price,omitempty"`
	ProductInfo       *OrderPlaced_ProductInfo `protobuf:"bytes,12,opt,name=product_info,json=productInfo,proto3" json:"product_info,omitempty"`
}

func (x *OrderPlaced_LineItem) Reset() {
	*x = OrderPlaced_LineItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_placed_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPlaced_LineItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPlaced_LineItem) ProtoMessage() {}

func (x *OrderPlaced_LineItem) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_placed_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPlaced_LineItem.ProtoReflect.Descriptor instead.
func (*OrderPlaced_LineItem) Descriptor() ([]byte, []int) {
	return file_order_order_placed_proto_rawDescGZIP(), []int{0, 3}
}

func (x *OrderPlaced_LineItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderPlaced_LineItem) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *OrderPlaced_LineItem) GetFulfillmentId() string {
	if x != nil {
		return x.FulfillmentId
	}
	return ""
}

func (x *OrderPlaced_LineItem) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *OrderPlaced_LineItem) GetTaxRate() *OrderPlaced_TaxRate {
	if x != nil {
		return x.TaxRate
	}
	return nil
}

func (x *OrderPlaced_LineItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderPlaced_LineItem) GetMultiplicity() int64 {
	if x != nil {
		return x.Multiplicity
	}
	return 0
}

func (x *OrderPlaced_LineItem) GetOriginalPrice() *OrderPlaced_Amount {
	if x != nil {
		return x.OriginalPrice
	}
	return nil
}

func (x *OrderPlaced_LineItem) GetOriginalLinePrice() *OrderPlaced_Amount {
	if x != nil {
		return x.OriginalLinePrice
	}
	return nil
}

func (x *OrderPlaced_LineItem) GetFinalPrice() *OrderPlaced_Amount {
	if x != nil {
		return x.FinalPrice
	}
	return nil
}

func (x *OrderPlaced_LineItem) GetFinalLinePrice() *OrderPlaced_Amount {
	if x != nil {
		return x.FinalLinePrice
	}
	return nil
}

func (x *OrderPlaced_LineItem) GetProductInfo() *OrderPlaced_ProductInfo {
	if x != nil {
		return x.ProductInfo
	}
	return nil
}

type OrderPlaced_Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DebtorId      int64  `protobuf:"varint,2,opt,name=debtor_id,json=debtorId,proto3" json:"debtor_id,omitempty"`
	Name          string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Street        string `protobuf:"bytes,4,opt,name=street,proto3" json:"street,omitempty"`
	StreetNumber  string `protobuf:"bytes,5,opt,name=street_number,json=streetNumber,proto3" json:"street_number,omitempty"`
	PostCode      string `protobuf:"bytes,6,opt,name=post_code,json=postCode,proto3" json:"post_code,omitempty"`
	City          string `protobuf:"bytes,7,opt,name=city,proto3" json:"city,omitempty"`
	Country       string `protobuf:"bytes,8,opt,name=country,proto3" json:"country,omitempty"`
	Email         string `protobuf:"bytes,9,opt,name=email,proto3" json:"email,omitempty"`
	Phone         string `protobuf:"bytes,10,opt,name=phone,proto3" json:"phone,omitempty"`
	ContactPerson string `protobuf:"bytes,11,opt,name=contact_person,json=contactPerson,proto3" json:"contact_person,omitempty"`
}

func (x *OrderPlaced_Address) Reset() {
	*x = OrderPlaced_Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_placed_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPlaced_Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPlaced_Address) ProtoMessage() {}

func (x *OrderPlaced_Address) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_placed_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPlaced_Address.ProtoReflect.Descriptor instead.
func (*OrderPlaced_Address) Descriptor() ([]byte, []int) {
	return file_order_order_placed_proto_rawDescGZIP(), []int{0, 4}
}

func (x *OrderPlaced_Address) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderPlaced_Address) GetDebtorId() int64 {
	if x != nil {
		return x.DebtorId
	}
	return 0
}

func (x *OrderPlaced_Address) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderPlaced_Address) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *OrderPlaced_Address) GetStreetNumber() string {
	if x != nil {
		return x.StreetNumber
	}
	return ""
}

func (x *OrderPlaced_Address) GetPostCode() string {
	if x != nil {
		return x.PostCode
	}
	return ""
}

func (x *OrderPlaced_Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *OrderPlaced_Address) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *OrderPlaced_Address) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *OrderPlaced_Address) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *OrderPlaced_Address) GetContactPerson() string {
	if x != nil {
		return x.ContactPerson
	}
	return ""
}

type OrderPlaced_Fulfillment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LineItemIds []string             `protobuf:"bytes,2,rep,name=line_item_ids,json=lineItemIds,proto3" json:"line_item_ids,omitempty"`
	State       string               `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Number      int64                `protobuf:"varint,4,opt,name=number,proto3" json:"number,omitempty"`
	Address     *OrderPlaced_Address `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *OrderPlaced_Fulfillment) Reset() {
	*x = OrderPlaced_Fulfillment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_placed_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPlaced_Fulfillment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPlaced_Fulfillment) ProtoMessage() {}

func (x *OrderPlaced_Fulfillment) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_placed_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPlaced_Fulfillment.ProtoReflect.Descriptor instead.
func (*OrderPlaced_Fulfillment) Descriptor() ([]byte, []int) {
	return file_order_order_placed_proto_rawDescGZIP(), []int{0, 5}
}

func (x *OrderPlaced_Fulfillment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderPlaced_Fulfillment) GetLineItemIds() []string {
	if x != nil {
		return x.LineItemIds
	}
	return nil
}

func (x *OrderPlaced_Fulfillment) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *OrderPlaced_Fulfillment) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *OrderPlaced_Fulfillment) GetAddress() *OrderPlaced_Address {
	if x != nil {
		return x.Address
	}
	return nil
}

var File_order_order_placed_proto protoreflect.FileDescriptor

var file_order_order_placed_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x22, 0xa6, 0x0e, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x64, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0d, 0x73, 0x75, 0x62,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x64, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0d, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x64, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x74, 0x61, 0x78, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x64, 0x2e,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08, 0x74, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x3a, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x64, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x42, 0x0a, 0x0c,
	0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x64, 0x2e, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0c, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x1a, 0x3a, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x1a, 0x31, 0x0a, 0x07,
	0x54, 0x61, 0x78, 0x52, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x1a,
	0x95, 0x01, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x6b, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x6b,
	0x75, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0xc0, 0x04, 0x0a, 0x08, 0x4c, 0x69, 0x6e, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x35, 0x0a, 0x08, 0x74, 0x61, 0x78, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x64, 0x2e, 0x54, 0x61, 0x78, 0x52, 0x61, 0x74, 0x65,
	0x52, 0x07, 0x74, 0x61, 0x78, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x69, 0x63, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x0e, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x64, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0d, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x13, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x64, 0x2e, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x11, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x6e,
	0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x64, 0x2e,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x43, 0x0a, 0x10, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x64,
	0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x4c, 0x69,
	0x6e, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x64, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xa5, 0x02, 0x0a, 0x07, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x62, 0x74, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x62, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x1a, 0xa5, 0x01, 0x0a, 0x0b, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69, 0x6e, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x64, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x6c, 0x75, 0x65, 0x2d, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x2f, 0x62, 0x6c, 0x75, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_order_order_placed_proto_rawDescOnce sync.Once
	file_order_order_placed_proto_rawDescData = file_order_order_placed_proto_rawDesc
)

func file_order_order_placed_proto_rawDescGZIP() []byte {
	file_order_order_placed_proto_rawDescOnce.Do(func() {
		file_order_order_placed_proto_rawDescData = protoimpl.X.CompressGZIP(file_order_order_placed_proto_rawDescData)
	})
	return file_order_order_placed_proto_rawDescData
}

var file_order_order_placed_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_order_order_placed_proto_goTypes = []interface{}{
	(*OrderPlaced)(nil),             // 0: order.OrderPlaced
	(*OrderPlaced_Amount)(nil),      // 1: order.OrderPlaced.Amount
	(*OrderPlaced_TaxRate)(nil),     // 2: order.OrderPlaced.TaxRate
	(*OrderPlaced_ProductInfo)(nil), // 3: order.OrderPlaced.ProductInfo
	(*OrderPlaced_LineItem)(nil),    // 4: order.OrderPlaced.LineItem
	(*OrderPlaced_Address)(nil),     // 5: order.OrderPlaced.Address
	(*OrderPlaced_Fulfillment)(nil), // 6: order.OrderPlaced.Fulfillment
}
var file_order_order_placed_proto_depIdxs = []int32{
	1,  // 0: order.OrderPlaced.subtotal_price:type_name -> order.OrderPlaced.Amount
	1,  // 1: order.OrderPlaced.shipping_price:type_name -> order.OrderPlaced.Amount
	1,  // 2: order.OrderPlaced.total_price:type_name -> order.OrderPlaced.Amount
	1,  // 3: order.OrderPlaced.tax_price:type_name -> order.OrderPlaced.Amount
	4,  // 4: order.OrderPlaced.line_items:type_name -> order.OrderPlaced.LineItem
	6,  // 5: order.OrderPlaced.fulfillments:type_name -> order.OrderPlaced.Fulfillment
	2,  // 6: order.OrderPlaced.LineItem.tax_rate:type_name -> order.OrderPlaced.TaxRate
	1,  // 7: order.OrderPlaced.LineItem.original_price:type_name -> order.OrderPlaced.Amount
	1,  // 8: order.OrderPlaced.LineItem.original_line_price:type_name -> order.OrderPlaced.Amount
	1,  // 9: order.OrderPlaced.LineItem.final_price:type_name -> order.OrderPlaced.Amount
	1,  // 10: order.OrderPlaced.LineItem.final_line_price:type_name -> order.OrderPlaced.Amount
	3,  // 11: order.OrderPlaced.LineItem.product_info:type_name -> order.OrderPlaced.ProductInfo
	5,  // 12: order.OrderPlaced.Fulfillment.address:type_name -> order.OrderPlaced.Address
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_order_order_placed_proto_init() }
func file_order_order_placed_proto_init() {
	if File_order_order_placed_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_order_order_placed_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPlaced); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_placed_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPlaced_Amount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_placed_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPlaced_TaxRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_placed_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPlaced_ProductInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_placed_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPlaced_LineItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_placed_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPlaced_Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_placed_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPlaced_Fulfillment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_order_order_placed_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_order_order_placed_proto_goTypes,
		DependencyIndexes: file_order_order_placed_proto_depIdxs,
		MessageInfos:      file_order_order_placed_proto_msgTypes,
	}.Build()
	File_order_order_placed_proto = out.File
	file_order_order_placed_proto_rawDesc = nil
	file_order_order_placed_proto_goTypes = nil
	file_order_order_placed_proto_depIdxs = nil
}
