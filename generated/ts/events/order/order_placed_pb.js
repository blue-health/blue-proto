// source: order/order_placed.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var proto = {};

goog.exportSymbol('order.OrderPlaced', null, proto);
goog.exportSymbol('order.OrderPlaced.Address', null, proto);
goog.exportSymbol('order.OrderPlaced.Amount', null, proto);
goog.exportSymbol('order.OrderPlaced.Fulfillment', null, proto);
goog.exportSymbol('order.OrderPlaced.LineItem', null, proto);
goog.exportSymbol('order.OrderPlaced.ProductInfo', null, proto);
goog.exportSymbol('order.OrderPlaced.TaxRate', null, proto);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.OrderPlaced = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.order.OrderPlaced.repeatedFields_, null);
};
goog.inherits(proto.order.OrderPlaced, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.OrderPlaced.displayName = 'proto.order.OrderPlaced';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.OrderPlaced.Amount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.OrderPlaced.Amount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.OrderPlaced.Amount.displayName = 'proto.order.OrderPlaced.Amount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.OrderPlaced.TaxRate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.OrderPlaced.TaxRate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.OrderPlaced.TaxRate.displayName = 'proto.order.OrderPlaced.TaxRate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.OrderPlaced.ProductInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.order.OrderPlaced.ProductInfo.repeatedFields_, null);
};
goog.inherits(proto.order.OrderPlaced.ProductInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.OrderPlaced.ProductInfo.displayName = 'proto.order.OrderPlaced.ProductInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.OrderPlaced.LineItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.OrderPlaced.LineItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.OrderPlaced.LineItem.displayName = 'proto.order.OrderPlaced.LineItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.OrderPlaced.Address = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.order.OrderPlaced.Address, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.OrderPlaced.Address.displayName = 'proto.order.OrderPlaced.Address';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.order.OrderPlaced.Fulfillment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.order.OrderPlaced.Fulfillment.repeatedFields_, null);
};
goog.inherits(proto.order.OrderPlaced.Fulfillment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.order.OrderPlaced.Fulfillment.displayName = 'proto.order.OrderPlaced.Fulfillment';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.order.OrderPlaced.repeatedFields_ = [3,11,12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.OrderPlaced.prototype.toObject = function(opt_includeInstance) {
  return proto.order.OrderPlaced.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.OrderPlaced} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.OrderPlaced.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    identityId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    note: jspb.Message.getFieldWithDefault(msg, 4, ""),
    state: jspb.Message.getFieldWithDefault(msg, 5, ""),
    number: jspb.Message.getFieldWithDefault(msg, 6, 0),
    subtotalPrice: (f = msg.getSubtotalPrice()) && proto.order.OrderPlaced.Amount.toObject(includeInstance, f),
    shippingPrice: (f = msg.getShippingPrice()) && proto.order.OrderPlaced.Amount.toObject(includeInstance, f),
    totalPrice: (f = msg.getTotalPrice()) && proto.order.OrderPlaced.Amount.toObject(includeInstance, f),
    taxPrice: (f = msg.getTaxPrice()) && proto.order.OrderPlaced.Amount.toObject(includeInstance, f),
    lineItemsList: jspb.Message.toObjectList(msg.getLineItemsList(),
    proto.order.OrderPlaced.LineItem.toObject, includeInstance),
    fulfillmentsList: jspb.Message.toObjectList(msg.getFulfillmentsList(),
    proto.order.OrderPlaced.Fulfillment.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.OrderPlaced}
 */
proto.order.OrderPlaced.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.OrderPlaced;
  return proto.order.OrderPlaced.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.OrderPlaced} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.OrderPlaced}
 */
proto.order.OrderPlaced.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentityId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumber(value);
      break;
    case 7:
      var value = new proto.order.OrderPlaced.Amount;
      reader.readMessage(value,proto.order.OrderPlaced.Amount.deserializeBinaryFromReader);
      msg.setSubtotalPrice(value);
      break;
    case 8:
      var value = new proto.order.OrderPlaced.Amount;
      reader.readMessage(value,proto.order.OrderPlaced.Amount.deserializeBinaryFromReader);
      msg.setShippingPrice(value);
      break;
    case 9:
      var value = new proto.order.OrderPlaced.Amount;
      reader.readMessage(value,proto.order.OrderPlaced.Amount.deserializeBinaryFromReader);
      msg.setTotalPrice(value);
      break;
    case 10:
      var value = new proto.order.OrderPlaced.Amount;
      reader.readMessage(value,proto.order.OrderPlaced.Amount.deserializeBinaryFromReader);
      msg.setTaxPrice(value);
      break;
    case 11:
      var value = new proto.order.OrderPlaced.LineItem;
      reader.readMessage(value,proto.order.OrderPlaced.LineItem.deserializeBinaryFromReader);
      msg.addLineItems(value);
      break;
    case 12:
      var value = new proto.order.OrderPlaced.Fulfillment;
      reader.readMessage(value,proto.order.OrderPlaced.Fulfillment.deserializeBinaryFromReader);
      msg.addFulfillments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.OrderPlaced.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.OrderPlaced.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.OrderPlaced} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.OrderPlaced.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIdentityId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getNote();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getNumber();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getSubtotalPrice();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.order.OrderPlaced.Amount.serializeBinaryToWriter
    );
  }
  f = message.getShippingPrice();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.order.OrderPlaced.Amount.serializeBinaryToWriter
    );
  }
  f = message.getTotalPrice();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.order.OrderPlaced.Amount.serializeBinaryToWriter
    );
  }
  f = message.getTaxPrice();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.order.OrderPlaced.Amount.serializeBinaryToWriter
    );
  }
  f = message.getLineItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.order.OrderPlaced.LineItem.serializeBinaryToWriter
    );
  }
  f = message.getFulfillmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.order.OrderPlaced.Fulfillment.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.OrderPlaced.Amount.prototype.toObject = function(opt_includeInstance) {
  return proto.order.OrderPlaced.Amount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.OrderPlaced.Amount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.OrderPlaced.Amount.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0),
    currency: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.OrderPlaced.Amount}
 */
proto.order.OrderPlaced.Amount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.OrderPlaced.Amount;
  return proto.order.OrderPlaced.Amount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.OrderPlaced.Amount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.OrderPlaced.Amount}
 */
proto.order.OrderPlaced.Amount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.OrderPlaced.Amount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.OrderPlaced.Amount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.OrderPlaced.Amount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.OrderPlaced.Amount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 value = 1;
 * @return {number}
 */
proto.order.OrderPlaced.Amount.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.OrderPlaced.Amount} returns this
 */
proto.order.OrderPlaced.Amount.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string currency = 2;
 * @return {string}
 */
proto.order.OrderPlaced.Amount.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderPlaced.Amount} returns this
 */
proto.order.OrderPlaced.Amount.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.OrderPlaced.TaxRate.prototype.toObject = function(opt_includeInstance) {
  return proto.order.OrderPlaced.TaxRate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.OrderPlaced.TaxRate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.OrderPlaced.TaxRate.toObject = function(includeInstance, msg) {
  var f, obj = {
    rate: jspb.Message.getFieldWithDefault(msg, 1, 0),
    kind: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.OrderPlaced.TaxRate}
 */
proto.order.OrderPlaced.TaxRate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.OrderPlaced.TaxRate;
  return proto.order.OrderPlaced.TaxRate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.OrderPlaced.TaxRate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.OrderPlaced.TaxRate}
 */
proto.order.OrderPlaced.TaxRate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRate(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKind(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.OrderPlaced.TaxRate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.OrderPlaced.TaxRate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.OrderPlaced.TaxRate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.OrderPlaced.TaxRate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRate();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getKind();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 rate = 1;
 * @return {number}
 */
proto.order.OrderPlaced.TaxRate.prototype.getRate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.OrderPlaced.TaxRate} returns this
 */
proto.order.OrderPlaced.TaxRate.prototype.setRate = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string kind = 2;
 * @return {string}
 */
proto.order.OrderPlaced.TaxRate.prototype.getKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderPlaced.TaxRate} returns this
 */
proto.order.OrderPlaced.TaxRate.prototype.setKind = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.order.OrderPlaced.ProductInfo.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.OrderPlaced.ProductInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.order.OrderPlaced.ProductInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.OrderPlaced.ProductInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.OrderPlaced.ProductInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sku: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    category: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.OrderPlaced.ProductInfo}
 */
proto.order.OrderPlaced.ProductInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.OrderPlaced.ProductInfo;
  return proto.order.OrderPlaced.ProductInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.OrderPlaced.ProductInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.OrderPlaced.ProductInfo}
 */
proto.order.OrderPlaced.ProductInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSku(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.OrderPlaced.ProductInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.OrderPlaced.ProductInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.OrderPlaced.ProductInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.OrderPlaced.ProductInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSku();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.order.OrderPlaced.ProductInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderPlaced.ProductInfo} returns this
 */
proto.order.OrderPlaced.ProductInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sku = 2;
 * @return {string}
 */
proto.order.OrderPlaced.ProductInfo.prototype.getSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderPlaced.ProductInfo} returns this
 */
proto.order.OrderPlaced.ProductInfo.prototype.setSku = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.order.OrderPlaced.ProductInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderPlaced.ProductInfo} returns this
 */
proto.order.OrderPlaced.ProductInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string category = 4;
 * @return {string}
 */
proto.order.OrderPlaced.ProductInfo.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderPlaced.ProductInfo} returns this
 */
proto.order.OrderPlaced.ProductInfo.prototype.setCategory = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.order.OrderPlaced.ProductInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderPlaced.ProductInfo} returns this
 */
proto.order.OrderPlaced.ProductInfo.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated string tags = 6;
 * @return {!Array<string>}
 */
proto.order.OrderPlaced.ProductInfo.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.order.OrderPlaced.ProductInfo} returns this
 */
proto.order.OrderPlaced.ProductInfo.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.order.OrderPlaced.ProductInfo} returns this
 */
proto.order.OrderPlaced.ProductInfo.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.order.OrderPlaced.ProductInfo} returns this
 */
proto.order.OrderPlaced.ProductInfo.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.OrderPlaced.LineItem.prototype.toObject = function(opt_includeInstance) {
  return proto.order.OrderPlaced.LineItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.OrderPlaced.LineItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.OrderPlaced.LineItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    productId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fulfillmentId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    number: jspb.Message.getFieldWithDefault(msg, 4, 0),
    taxRate: (f = msg.getTaxRate()) && proto.order.OrderPlaced.TaxRate.toObject(includeInstance, f),
    quantity: jspb.Message.getFieldWithDefault(msg, 6, 0),
    multiplicity: jspb.Message.getFieldWithDefault(msg, 7, 0),
    originalPrice: (f = msg.getOriginalPrice()) && proto.order.OrderPlaced.Amount.toObject(includeInstance, f),
    originalLinePrice: (f = msg.getOriginalLinePrice()) && proto.order.OrderPlaced.Amount.toObject(includeInstance, f),
    finalPrice: (f = msg.getFinalPrice()) && proto.order.OrderPlaced.Amount.toObject(includeInstance, f),
    finalLinePrice: (f = msg.getFinalLinePrice()) && proto.order.OrderPlaced.Amount.toObject(includeInstance, f),
    productInfo: (f = msg.getProductInfo()) && proto.order.OrderPlaced.ProductInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.OrderPlaced.LineItem}
 */
proto.order.OrderPlaced.LineItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.OrderPlaced.LineItem;
  return proto.order.OrderPlaced.LineItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.OrderPlaced.LineItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.OrderPlaced.LineItem}
 */
proto.order.OrderPlaced.LineItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFulfillmentId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumber(value);
      break;
    case 5:
      var value = new proto.order.OrderPlaced.TaxRate;
      reader.readMessage(value,proto.order.OrderPlaced.TaxRate.deserializeBinaryFromReader);
      msg.setTaxRate(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQuantity(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMultiplicity(value);
      break;
    case 8:
      var value = new proto.order.OrderPlaced.Amount;
      reader.readMessage(value,proto.order.OrderPlaced.Amount.deserializeBinaryFromReader);
      msg.setOriginalPrice(value);
      break;
    case 9:
      var value = new proto.order.OrderPlaced.Amount;
      reader.readMessage(value,proto.order.OrderPlaced.Amount.deserializeBinaryFromReader);
      msg.setOriginalLinePrice(value);
      break;
    case 10:
      var value = new proto.order.OrderPlaced.Amount;
      reader.readMessage(value,proto.order.OrderPlaced.Amount.deserializeBinaryFromReader);
      msg.setFinalPrice(value);
      break;
    case 11:
      var value = new proto.order.OrderPlaced.Amount;
      reader.readMessage(value,proto.order.OrderPlaced.Amount.deserializeBinaryFromReader);
      msg.setFinalLinePrice(value);
      break;
    case 12:
      var value = new proto.order.OrderPlaced.ProductInfo;
      reader.readMessage(value,proto.order.OrderPlaced.ProductInfo.deserializeBinaryFromReader);
      msg.setProductInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.OrderPlaced.LineItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.OrderPlaced.LineItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.OrderPlaced.LineItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.OrderPlaced.LineItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProductId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFulfillmentId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNumber();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getTaxRate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.order.OrderPlaced.TaxRate.serializeBinaryToWriter
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getMultiplicity();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getOriginalPrice();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.order.OrderPlaced.Amount.serializeBinaryToWriter
    );
  }
  f = message.getOriginalLinePrice();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.order.OrderPlaced.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFinalPrice();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.order.OrderPlaced.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFinalLinePrice();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.order.OrderPlaced.Amount.serializeBinaryToWriter
    );
  }
  f = message.getProductInfo();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.order.OrderPlaced.ProductInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.order.OrderPlaced.LineItem.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderPlaced.LineItem} returns this
 */
proto.order.OrderPlaced.LineItem.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string product_id = 2;
 * @return {string}
 */
proto.order.OrderPlaced.LineItem.prototype.getProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderPlaced.LineItem} returns this
 */
proto.order.OrderPlaced.LineItem.prototype.setProductId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string fulfillment_id = 3;
 * @return {string}
 */
proto.order.OrderPlaced.LineItem.prototype.getFulfillmentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderPlaced.LineItem} returns this
 */
proto.order.OrderPlaced.LineItem.prototype.setFulfillmentId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 number = 4;
 * @return {number}
 */
proto.order.OrderPlaced.LineItem.prototype.getNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.OrderPlaced.LineItem} returns this
 */
proto.order.OrderPlaced.LineItem.prototype.setNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional TaxRate tax_rate = 5;
 * @return {?proto.order.OrderPlaced.TaxRate}
 */
proto.order.OrderPlaced.LineItem.prototype.getTaxRate = function() {
  return /** @type{?proto.order.OrderPlaced.TaxRate} */ (
    jspb.Message.getWrapperField(this, proto.order.OrderPlaced.TaxRate, 5));
};


/**
 * @param {?proto.order.OrderPlaced.TaxRate|undefined} value
 * @return {!proto.order.OrderPlaced.LineItem} returns this
*/
proto.order.OrderPlaced.LineItem.prototype.setTaxRate = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.order.OrderPlaced.LineItem} returns this
 */
proto.order.OrderPlaced.LineItem.prototype.clearTaxRate = function() {
  return this.setTaxRate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.order.OrderPlaced.LineItem.prototype.hasTaxRate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int64 quantity = 6;
 * @return {number}
 */
proto.order.OrderPlaced.LineItem.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.OrderPlaced.LineItem} returns this
 */
proto.order.OrderPlaced.LineItem.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 multiplicity = 7;
 * @return {number}
 */
proto.order.OrderPlaced.LineItem.prototype.getMultiplicity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.OrderPlaced.LineItem} returns this
 */
proto.order.OrderPlaced.LineItem.prototype.setMultiplicity = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional Amount original_price = 8;
 * @return {?proto.order.OrderPlaced.Amount}
 */
proto.order.OrderPlaced.LineItem.prototype.getOriginalPrice = function() {
  return /** @type{?proto.order.OrderPlaced.Amount} */ (
    jspb.Message.getWrapperField(this, proto.order.OrderPlaced.Amount, 8));
};


/**
 * @param {?proto.order.OrderPlaced.Amount|undefined} value
 * @return {!proto.order.OrderPlaced.LineItem} returns this
*/
proto.order.OrderPlaced.LineItem.prototype.setOriginalPrice = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.order.OrderPlaced.LineItem} returns this
 */
proto.order.OrderPlaced.LineItem.prototype.clearOriginalPrice = function() {
  return this.setOriginalPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.order.OrderPlaced.LineItem.prototype.hasOriginalPrice = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Amount original_line_price = 9;
 * @return {?proto.order.OrderPlaced.Amount}
 */
proto.order.OrderPlaced.LineItem.prototype.getOriginalLinePrice = function() {
  return /** @type{?proto.order.OrderPlaced.Amount} */ (
    jspb.Message.getWrapperField(this, proto.order.OrderPlaced.Amount, 9));
};


/**
 * @param {?proto.order.OrderPlaced.Amount|undefined} value
 * @return {!proto.order.OrderPlaced.LineItem} returns this
*/
proto.order.OrderPlaced.LineItem.prototype.setOriginalLinePrice = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.order.OrderPlaced.LineItem} returns this
 */
proto.order.OrderPlaced.LineItem.prototype.clearOriginalLinePrice = function() {
  return this.setOriginalLinePrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.order.OrderPlaced.LineItem.prototype.hasOriginalLinePrice = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Amount final_price = 10;
 * @return {?proto.order.OrderPlaced.Amount}
 */
proto.order.OrderPlaced.LineItem.prototype.getFinalPrice = function() {
  return /** @type{?proto.order.OrderPlaced.Amount} */ (
    jspb.Message.getWrapperField(this, proto.order.OrderPlaced.Amount, 10));
};


/**
 * @param {?proto.order.OrderPlaced.Amount|undefined} value
 * @return {!proto.order.OrderPlaced.LineItem} returns this
*/
proto.order.OrderPlaced.LineItem.prototype.setFinalPrice = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.order.OrderPlaced.LineItem} returns this
 */
proto.order.OrderPlaced.LineItem.prototype.clearFinalPrice = function() {
  return this.setFinalPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.order.OrderPlaced.LineItem.prototype.hasFinalPrice = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Amount final_line_price = 11;
 * @return {?proto.order.OrderPlaced.Amount}
 */
proto.order.OrderPlaced.LineItem.prototype.getFinalLinePrice = function() {
  return /** @type{?proto.order.OrderPlaced.Amount} */ (
    jspb.Message.getWrapperField(this, proto.order.OrderPlaced.Amount, 11));
};


/**
 * @param {?proto.order.OrderPlaced.Amount|undefined} value
 * @return {!proto.order.OrderPlaced.LineItem} returns this
*/
proto.order.OrderPlaced.LineItem.prototype.setFinalLinePrice = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.order.OrderPlaced.LineItem} returns this
 */
proto.order.OrderPlaced.LineItem.prototype.clearFinalLinePrice = function() {
  return this.setFinalLinePrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.order.OrderPlaced.LineItem.prototype.hasFinalLinePrice = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional ProductInfo product_info = 12;
 * @return {?proto.order.OrderPlaced.ProductInfo}
 */
proto.order.OrderPlaced.LineItem.prototype.getProductInfo = function() {
  return /** @type{?proto.order.OrderPlaced.ProductInfo} */ (
    jspb.Message.getWrapperField(this, proto.order.OrderPlaced.ProductInfo, 12));
};


/**
 * @param {?proto.order.OrderPlaced.ProductInfo|undefined} value
 * @return {!proto.order.OrderPlaced.LineItem} returns this
*/
proto.order.OrderPlaced.LineItem.prototype.setProductInfo = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.order.OrderPlaced.LineItem} returns this
 */
proto.order.OrderPlaced.LineItem.prototype.clearProductInfo = function() {
  return this.setProductInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.order.OrderPlaced.LineItem.prototype.hasProductInfo = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.OrderPlaced.Address.prototype.toObject = function(opt_includeInstance) {
  return proto.order.OrderPlaced.Address.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.OrderPlaced.Address} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.OrderPlaced.Address.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    debtorId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    street: jspb.Message.getFieldWithDefault(msg, 4, ""),
    streetNumber: jspb.Message.getFieldWithDefault(msg, 5, ""),
    postCode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    city: jspb.Message.getFieldWithDefault(msg, 7, ""),
    country: jspb.Message.getFieldWithDefault(msg, 8, ""),
    email: jspb.Message.getFieldWithDefault(msg, 9, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 10, ""),
    contactPerson: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.OrderPlaced.Address}
 */
proto.order.OrderPlaced.Address.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.OrderPlaced.Address;
  return proto.order.OrderPlaced.Address.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.OrderPlaced.Address} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.OrderPlaced.Address}
 */
proto.order.OrderPlaced.Address.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDebtorId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStreet(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStreetNumber(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostCode(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactPerson(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.OrderPlaced.Address.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.OrderPlaced.Address.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.OrderPlaced.Address} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.OrderPlaced.Address.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDebtorId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStreet();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStreetNumber();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPostCode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getContactPerson();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.order.OrderPlaced.Address.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderPlaced.Address} returns this
 */
proto.order.OrderPlaced.Address.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 debtor_id = 2;
 * @return {number}
 */
proto.order.OrderPlaced.Address.prototype.getDebtorId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.OrderPlaced.Address} returns this
 */
proto.order.OrderPlaced.Address.prototype.setDebtorId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.order.OrderPlaced.Address.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderPlaced.Address} returns this
 */
proto.order.OrderPlaced.Address.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string street = 4;
 * @return {string}
 */
proto.order.OrderPlaced.Address.prototype.getStreet = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderPlaced.Address} returns this
 */
proto.order.OrderPlaced.Address.prototype.setStreet = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string street_number = 5;
 * @return {string}
 */
proto.order.OrderPlaced.Address.prototype.getStreetNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderPlaced.Address} returns this
 */
proto.order.OrderPlaced.Address.prototype.setStreetNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string post_code = 6;
 * @return {string}
 */
proto.order.OrderPlaced.Address.prototype.getPostCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderPlaced.Address} returns this
 */
proto.order.OrderPlaced.Address.prototype.setPostCode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string city = 7;
 * @return {string}
 */
proto.order.OrderPlaced.Address.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderPlaced.Address} returns this
 */
proto.order.OrderPlaced.Address.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string country = 8;
 * @return {string}
 */
proto.order.OrderPlaced.Address.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderPlaced.Address} returns this
 */
proto.order.OrderPlaced.Address.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string email = 9;
 * @return {string}
 */
proto.order.OrderPlaced.Address.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderPlaced.Address} returns this
 */
proto.order.OrderPlaced.Address.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string phone = 10;
 * @return {string}
 */
proto.order.OrderPlaced.Address.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderPlaced.Address} returns this
 */
proto.order.OrderPlaced.Address.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string contact_person = 11;
 * @return {string}
 */
proto.order.OrderPlaced.Address.prototype.getContactPerson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderPlaced.Address} returns this
 */
proto.order.OrderPlaced.Address.prototype.setContactPerson = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.order.OrderPlaced.Fulfillment.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.order.OrderPlaced.Fulfillment.prototype.toObject = function(opt_includeInstance) {
  return proto.order.OrderPlaced.Fulfillment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.order.OrderPlaced.Fulfillment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.OrderPlaced.Fulfillment.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    lineItemIdsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    state: jspb.Message.getFieldWithDefault(msg, 3, ""),
    number: jspb.Message.getFieldWithDefault(msg, 4, 0),
    address: (f = msg.getAddress()) && proto.order.OrderPlaced.Address.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.order.OrderPlaced.Fulfillment}
 */
proto.order.OrderPlaced.Fulfillment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.order.OrderPlaced.Fulfillment;
  return proto.order.OrderPlaced.Fulfillment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.order.OrderPlaced.Fulfillment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.order.OrderPlaced.Fulfillment}
 */
proto.order.OrderPlaced.Fulfillment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addLineItemIds(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumber(value);
      break;
    case 5:
      var value = new proto.order.OrderPlaced.Address;
      reader.readMessage(value,proto.order.OrderPlaced.Address.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.order.OrderPlaced.Fulfillment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.order.OrderPlaced.Fulfillment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.order.OrderPlaced.Fulfillment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.order.OrderPlaced.Fulfillment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLineItemIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNumber();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.order.OrderPlaced.Address.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.order.OrderPlaced.Fulfillment.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderPlaced.Fulfillment} returns this
 */
proto.order.OrderPlaced.Fulfillment.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string line_item_ids = 2;
 * @return {!Array<string>}
 */
proto.order.OrderPlaced.Fulfillment.prototype.getLineItemIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.order.OrderPlaced.Fulfillment} returns this
 */
proto.order.OrderPlaced.Fulfillment.prototype.setLineItemIdsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.order.OrderPlaced.Fulfillment} returns this
 */
proto.order.OrderPlaced.Fulfillment.prototype.addLineItemIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.order.OrderPlaced.Fulfillment} returns this
 */
proto.order.OrderPlaced.Fulfillment.prototype.clearLineItemIdsList = function() {
  return this.setLineItemIdsList([]);
};


/**
 * optional string state = 3;
 * @return {string}
 */
proto.order.OrderPlaced.Fulfillment.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderPlaced.Fulfillment} returns this
 */
proto.order.OrderPlaced.Fulfillment.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 number = 4;
 * @return {number}
 */
proto.order.OrderPlaced.Fulfillment.prototype.getNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.OrderPlaced.Fulfillment} returns this
 */
proto.order.OrderPlaced.Fulfillment.prototype.setNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional Address address = 5;
 * @return {?proto.order.OrderPlaced.Address}
 */
proto.order.OrderPlaced.Fulfillment.prototype.getAddress = function() {
  return /** @type{?proto.order.OrderPlaced.Address} */ (
    jspb.Message.getWrapperField(this, proto.order.OrderPlaced.Address, 5));
};


/**
 * @param {?proto.order.OrderPlaced.Address|undefined} value
 * @return {!proto.order.OrderPlaced.Fulfillment} returns this
*/
proto.order.OrderPlaced.Fulfillment.prototype.setAddress = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.order.OrderPlaced.Fulfillment} returns this
 */
proto.order.OrderPlaced.Fulfillment.prototype.clearAddress = function() {
  return this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.order.OrderPlaced.Fulfillment.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.order.OrderPlaced.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderPlaced} returns this
 */
proto.order.OrderPlaced.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string identity_id = 2;
 * @return {string}
 */
proto.order.OrderPlaced.prototype.getIdentityId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderPlaced} returns this
 */
proto.order.OrderPlaced.prototype.setIdentityId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string tags = 3;
 * @return {!Array<string>}
 */
proto.order.OrderPlaced.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.order.OrderPlaced} returns this
 */
proto.order.OrderPlaced.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.order.OrderPlaced} returns this
 */
proto.order.OrderPlaced.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.order.OrderPlaced} returns this
 */
proto.order.OrderPlaced.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional string note = 4;
 * @return {string}
 */
proto.order.OrderPlaced.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderPlaced} returns this
 */
proto.order.OrderPlaced.prototype.setNote = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string state = 5;
 * @return {string}
 */
proto.order.OrderPlaced.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.order.OrderPlaced} returns this
 */
proto.order.OrderPlaced.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 number = 6;
 * @return {number}
 */
proto.order.OrderPlaced.prototype.getNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.order.OrderPlaced} returns this
 */
proto.order.OrderPlaced.prototype.setNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional Amount subtotal_price = 7;
 * @return {?proto.order.OrderPlaced.Amount}
 */
proto.order.OrderPlaced.prototype.getSubtotalPrice = function() {
  return /** @type{?proto.order.OrderPlaced.Amount} */ (
    jspb.Message.getWrapperField(this, proto.order.OrderPlaced.Amount, 7));
};


/**
 * @param {?proto.order.OrderPlaced.Amount|undefined} value
 * @return {!proto.order.OrderPlaced} returns this
*/
proto.order.OrderPlaced.prototype.setSubtotalPrice = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.order.OrderPlaced} returns this
 */
proto.order.OrderPlaced.prototype.clearSubtotalPrice = function() {
  return this.setSubtotalPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.order.OrderPlaced.prototype.hasSubtotalPrice = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Amount shipping_price = 8;
 * @return {?proto.order.OrderPlaced.Amount}
 */
proto.order.OrderPlaced.prototype.getShippingPrice = function() {
  return /** @type{?proto.order.OrderPlaced.Amount} */ (
    jspb.Message.getWrapperField(this, proto.order.OrderPlaced.Amount, 8));
};


/**
 * @param {?proto.order.OrderPlaced.Amount|undefined} value
 * @return {!proto.order.OrderPlaced} returns this
*/
proto.order.OrderPlaced.prototype.setShippingPrice = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.order.OrderPlaced} returns this
 */
proto.order.OrderPlaced.prototype.clearShippingPrice = function() {
  return this.setShippingPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.order.OrderPlaced.prototype.hasShippingPrice = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Amount total_price = 9;
 * @return {?proto.order.OrderPlaced.Amount}
 */
proto.order.OrderPlaced.prototype.getTotalPrice = function() {
  return /** @type{?proto.order.OrderPlaced.Amount} */ (
    jspb.Message.getWrapperField(this, proto.order.OrderPlaced.Amount, 9));
};


/**
 * @param {?proto.order.OrderPlaced.Amount|undefined} value
 * @return {!proto.order.OrderPlaced} returns this
*/
proto.order.OrderPlaced.prototype.setTotalPrice = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.order.OrderPlaced} returns this
 */
proto.order.OrderPlaced.prototype.clearTotalPrice = function() {
  return this.setTotalPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.order.OrderPlaced.prototype.hasTotalPrice = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Amount tax_price = 10;
 * @return {?proto.order.OrderPlaced.Amount}
 */
proto.order.OrderPlaced.prototype.getTaxPrice = function() {
  return /** @type{?proto.order.OrderPlaced.Amount} */ (
    jspb.Message.getWrapperField(this, proto.order.OrderPlaced.Amount, 10));
};


/**
 * @param {?proto.order.OrderPlaced.Amount|undefined} value
 * @return {!proto.order.OrderPlaced} returns this
*/
proto.order.OrderPlaced.prototype.setTaxPrice = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.order.OrderPlaced} returns this
 */
proto.order.OrderPlaced.prototype.clearTaxPrice = function() {
  return this.setTaxPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.order.OrderPlaced.prototype.hasTaxPrice = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * repeated LineItem line_items = 11;
 * @return {!Array<!proto.order.OrderPlaced.LineItem>}
 */
proto.order.OrderPlaced.prototype.getLineItemsList = function() {
  return /** @type{!Array<!proto.order.OrderPlaced.LineItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.order.OrderPlaced.LineItem, 11));
};


/**
 * @param {!Array<!proto.order.OrderPlaced.LineItem>} value
 * @return {!proto.order.OrderPlaced} returns this
*/
proto.order.OrderPlaced.prototype.setLineItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.order.OrderPlaced.LineItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.order.OrderPlaced.LineItem}
 */
proto.order.OrderPlaced.prototype.addLineItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.order.OrderPlaced.LineItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.order.OrderPlaced} returns this
 */
proto.order.OrderPlaced.prototype.clearLineItemsList = function() {
  return this.setLineItemsList([]);
};


/**
 * repeated Fulfillment fulfillments = 12;
 * @return {!Array<!proto.order.OrderPlaced.Fulfillment>}
 */
proto.order.OrderPlaced.prototype.getFulfillmentsList = function() {
  return /** @type{!Array<!proto.order.OrderPlaced.Fulfillment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.order.OrderPlaced.Fulfillment, 12));
};


/**
 * @param {!Array<!proto.order.OrderPlaced.Fulfillment>} value
 * @return {!proto.order.OrderPlaced} returns this
*/
proto.order.OrderPlaced.prototype.setFulfillmentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.order.OrderPlaced.Fulfillment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.order.OrderPlaced.Fulfillment}
 */
proto.order.OrderPlaced.prototype.addFulfillments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.order.OrderPlaced.Fulfillment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.order.OrderPlaced} returns this
 */
proto.order.OrderPlaced.prototype.clearFulfillmentsList = function() {
  return this.setFulfillmentsList([]);
};


goog.object.extend(exports, proto);
